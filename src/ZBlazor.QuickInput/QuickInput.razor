@typeparam TItem
<div class="@($"zb-quick-input-container {ContainerClass} ")"
     style="@($"width:{Width};")">
    <input type="text"
           value="@InputValue"
           class="@Class"
           @attributes="InputAttributes"
           @oninput="OnValueChange"
           @onkeydown="OnKeyDown"
           @onfocus="OnFocus"
           @onblur="OnBlur"
           @onmousedown="OnMouseDown"
           @onmouseup="OnMouseUp" />
    @if (InputAccessory != null)
    {
        @InputAccessory
    }
    @if (ShowClearButton)
    {
        <span class="zb-quick-input-clear-button"
              title="Clear value"
              style="@($"{(hasInputValue ? "" : "display: none;")}")"
              @onclick="ClearInputValue"
              @onclick:stopPropagation="true"
              @onclick:preventDefault="true"
              @onmousedown:preventDefault="true"
              @onmousedown:stopPropagation="true"
              @onmouseup:preventDefault="true"
              @onmouseup:stopPropagation="true">
            <span class="zb-quick-input-close-symbol">&times;</span>
        </span>
    }
    <div class="@($"zb-quick-input-items {(isOpen ? " zb-quick-input-items-open" :"")}")"
         style="@($"{(MaxItemsHeight != null ? $"style: {MaxItemsHeight}" : "")}")"
         @onmousedown="OnMouseDown"
         @onmouseup="OnMouseUp">
        <div class="zb-quick-input-items-scrollable">
            @if (hasInputValue && SearchItems.All(i => !i.IsMatch))
            {
                <div class="zb-quick-input-item" @onclick:preventDefault="true" @onclick:stopPropagation="true">
                    @if (NoResultsView != null)
                    {
                        @NoResultsView
                    }
                    else
                    {
                        <span>No items found</span>
                    }
                </div>
            }
            else
            {
                int showingIndex = 0;

                foreach (var item in GetOrderedSearchItems())
                {
                    {
                        if (item.IsMatch || isOpen)
                        {
                            item.IsSelected = showingIndex == selectedItemIndex;
                            showingIndex += 1;
                        }
                        item.ShouldItemShow = ShouldItemShow(item.IsMatch, showingIndex);

                        if (!item.ShouldItemShow)
                        {
                            continue;
                        }
                    }

                    <div @key="item.Key"
                         class="@($"zb-quick-input-item {(item.IsSelected ? "zb-quick-input-active" : "")}")"
                         @onclick="@(async () => await OnSelected(item))">
                        @if (ItemTemplate != null)
                        {
                            @ItemTemplate(item)
                        }
                        else
                        {
                            @item.GetDisplayText(HighlightMatches, ShowOtherMatches)
                        }
                    </div>
                }
            }
        </div>
    </div>
</div>
