@page "/time-picker"

<BSModal @ref="modal" IgnoreEscape="false">
    <BSModalHeader>Test Modal</BSModalHeader>
    <BSModalBody>
        <div>
            <UI.Shared.TimePicker />
        </div>
    </BSModalBody>
    <BSModalFooter>
        Test Footer
    </BSModalFooter>
</BSModal>

<BSButton OnClick="ShowModal">Launch Modal</BSButton>

<div>
    <UI.Shared.TimePicker @bind-Value="currentTime" />
</div>
<div>
    <UI.Shared.TimePicker />
</div>
<div>
    <UI.Shared.TimePicker />
</div>
<div>
    <UI.Shared.TimePicker />
</div>
<div>
    <UI.Shared.TimePicker />
</div>
<div>
    <UI.Shared.TimePicker />
</div>
<div>
    <UI.Shared.TimePicker />
</div>
<div>
    <UI.Shared.TimePicker />
</div>
<div>
    <UI.Shared.TimePicker />
</div>
<div>
    <UI.Shared.TimePicker />
</div>
<div>
    <UI.Shared.TimePicker />
</div>
<div>
    <UI.Shared.TimePicker />
</div>
<div>
    <UI.Shared.TimePicker />
</div>

<p>
    Selected Time: @(currentTime?.ToString("t") ?? "NULL")
</p>

@code {
    DateTime? currentTime = new DateTime(2020, 4, 28, 9, 0, 0);
    BSModal modal = null!;

    async Task ShowModal()
    {
        await Task.Delay(100);
        modal.Show();

        StateHasChanged();
    }

}
